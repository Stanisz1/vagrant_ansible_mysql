---
- hosts: all
  become: yes
  vars:
    MYSQL_ROOT_PASSWORD: secret
    mysql_cnfs:
      master: master.cnf
      slave1: slave1.cnf
      slave2: slave2.cnf 
    mysql_sql:
      master: master.sql
      slave1: slave1.sql
      slave2: slave2.sql
  
  tasks:
    - name: Installing Mysql  and dependencies
      package:
       name: "{{item}}"
       cache_valid_time: 3600
       update_cache: yes
       state: present
      with_items:
       - python3-mysqldb
       - mysql-server

    - name: Ensure MySQL service is enabled and running
      systemd:
        name: mysql
        state: started
        enabled: yes

    - name: update mysql root password for all root accounts  
      mysql_user:  
         name: root  
         host: "{{item}}" 
         password: "{{ MYSQL_ROOT_PASSWORD }}"  
         login_user: root  
         login_password: "{{ MYSQL_ROOT_PASSWORD }}"  
         check_implicit_admin: yes  
         priv: "*.*:ALL,GRANT"  
      with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost 

    - name: Copy MySQL config files
      ansible.builtin.copy:
        src: "db_config/{{ item }}"
        dest: "/etc/mysql/my.cnf"
        mode: 0755
      with_items:
          - "{{ mysql_cnfs[mysql_replication_role] }}"
      when: mysql_cnfs[mysql_replication_role] is defined

    - name: Change mysqld.conf
      replace:
        path: "/etc/mysql/mysql.conf.d/mysqld.cnf"
        regexp: '^{{item}}'
        replace: '#{{item}}'
      with_items:
       - bind-address
       - mysqlx-bind-address
       - user

    - name: add sample data to database 
      ansible.builtin.copy:
        src: "db_sql/{{ item }}"
        dest: "/tmp/start.sql"
        mode: 0755
      with_items:
          - "{{ mysql_sql[mysql_replication_role] }}"
      when: mysql_sql[mysql_replication_role] is defined

    - name: insert data into database 
      mysql_db: 
        name: start
        state: import 
        target: "/tmp/start.sql"
        login_user: root
        login_password: "{{ MYSQL_ROOT_PASSWORD }}"  
      
    - name: Ensure MySQL service restarted
      service:
        name: mysql
        state: restarted
        enabled: yes
